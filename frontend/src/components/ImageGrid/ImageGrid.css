/* ImageGrid.css */
* {
  margin: 20px;
  padding: 20px;
  box-sizing: border-box;
}

/* Variables */
:root {
  --index: calc(1vw + 1vh);
  --transition: cubic-bezier(.1, .7, 0, 1);
}

/* Wrapper */
.wrapper {
  display: flex;
  align-items: center;
  justify-content: center;
  height: auto;
}

/* Items Container */
.items {
  display: flex;
  gap: 0.4rem;
  perspective: calc(var(--index) * 35);
  margin-top: 100px;
}

/* Item */
.item {
  width: calc(var(--index) * 3);
  height: calc(var(--index) * 12);
  background-color: #222;
  background-size: cover;
  background-position: center;
  cursor: pointer;
  transition: transform 1.25s var(--transition), filter 3s var(--transition), width 1.25s var(--transition);
  will-change: transform, filter, rotateY, width;
  position: relative;
}

.item::before, .item::after {
  content: '';
  position: absolute;
  height: 100%;
  width: 20px;
  right: calc(var(--index) * -1);
}

.item::after {
  left: calc(var(--index) * -1);
}

.item video {
  width: 100%;
  height: 100%;
 object-fit: cover; 
}

/* Hover Effects */
.items .item:hover {
  filter: inherit;
  transform: translateZ(calc(var(--index) * 10));
}

/* Right */
.items .item:hover + * {
  filter: inherit;
  transform: translateZ(calc(var(--index) * 8.5)) rotateY(35deg);
  z-index: -1;
}

.items .item:hover + * + * {
  filter: inherit;
  transform: translateZ(calc(var(--index) * 5.6)) rotateY(40deg);
  z-index: -2;
}

.items .item:hover + * + * + * {
  filter: inherit;
  transform: translateZ(calc(var(--index) * 2.5)) rotateY(30deg);
  z-index: -3;
}

.items .item:hover + * + * + * + * {
  filter: inherit;
  transform: translateZ(calc(var(--index) * .6)) rotateY(15deg);
  z-index: -4;
}

/* Left */
.items .item:has( + :hover) {
  filter: inherit;
  transform: translateZ(calc(var(--index) * 8.5)) rotateY(-35deg);
}

.items .item:has( + * + :hover) {
  filter: inherit;
  transform: translateZ(calc(var(--index) * 5.6)) rotateY(-40deg);
}

.items .item:has( + * + * + :hover) {
  filter: inherit;
  transform: translateZ(calc(var(--index) * 2.5)) rotateY(-30deg);
}

.items .item:has( + * + * + * + :hover) {
  filter: inherit;
  transform: translateZ(calc(var(--index) * .6)) rotateY(-15deg);
}

/* Active & Focus */
.items .item.active, .items .item:focus {
  width: 40vw;
  filter: inherit;
  z-index: 100;
  transform: translateZ(calc(var(--index) * 10));
  margin: 0 0.45vw;
}
